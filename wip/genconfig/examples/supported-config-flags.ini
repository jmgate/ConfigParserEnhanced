# supported-config-flags.ini
#
#------------------------------------------------------------------------------
#
# This is a configuration file for the `GenConfig` tool, used to specify what
# keywords are allowable in the build name to differentiate how the code will
# be configured.  The file has only a single section (DEFAULT), and its
# contents follow this pattern:
#
#   [DEFAULT]
#   flag-1:
#       option-1
#       option-2
#   flag-2:      # flag names must be unique
#       option-3 # option names must also all be unique
#       option-4
#       option-5 # flags can support more than just two options
#
# All flag names and options must be unique within the file.  All flag and
# option names are simply strings, so it's up to the team using the `GenConfig`
# tool to decide if they want to adopt any particular naming conventions.
#
# The flag names are arranged alphabetically within the file.  The options for
# a flag are also arranged alphabetically, with the exception that the first
# option for a flag is considered the default, and as such can be out of
# alphabetical order.
#
#------------------------------------------------------------------------------
#
# Adding a New Flag/Option Set
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# If you need to extend the `GenConfig` tool to parse a new set of keywords out
# of the build name, you'll need to add a new flag/options block to the DEFAULT
# section below.  To do so:
#
#   1. Determine the name for the new flag.
#   2. Determine the names for the different options pertaining to it.
#   3. Add the new flag/options block (see above for syntax).
#   4. Ensure all the flag and option names in the file are unique.
#   5. Head over to `config-specs.ini` and add new sections corresponding to
#      the new `<flag>-<option>` combinations (see there for details).
#
#------------------------------------------------------------------------------
#
# Adding a New Option to a Flag
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# If you need to add a new option to an existing flag---for instance, you want
# to add a new user to the `package-enables` flag such that you can specify a
# different set of packages to turn on---all you need to do is:
#
#   1. Find the flag you want to add the option to.
#   2. Insert the new option alphabetically in the list.
#   3. Ensure the option name is unique within the file.
#   4. Head over to `config-specs.ini` and add a new section corresponding to
#      the new `<flag>-<option>` combination (see there for details).
#
#------------------------------------------------------------------------------
#
# Removing an Option from a Flag
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# If you need to remove an option that is no longer supported:
#
#   1. Find the option you want to remove.
#   2. Delete that one line.
#   3. Head over to `config-specs.ini` and remove the section corresponding to
#      the `<flag>-<option>` combination you removed (see there for details).
#
# Note:  You may wish to deprecate an option for a time before removing it.  To
#        do so, your team may wish to adopt a convention of prepending `dep-`
#        to flag/option names to indicate their deprecation.
#
#------------------------------------------------------------------------------
#
# Removing a Flag/Option Set
# ~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# If you need to remove an entire flag/option set---for instance, if you used
# to give your users flexibility in a certain way, but are now taking that away
# to consolidate what is officially supported---simply:
#
#   1. Find the flag/option set you need to remove.
#   2. Remove all the lines pertaining to it (the flag and all its options).
#   3. Head over to `config-specs.ini` and remove the sections corresponding to
#      the `<flag>-<option>` combinations you removed (see there for details).
#
# Note:  You may wish to deprecate a flag/option set for a time before removing
#        it.  To do so, your team may wish to adopt a convention of prepending
#        `dep-` to flag/option names to indicate their deprecation.
#
#------------------------------------------------------------------------------
#
# Modifying an Existing Flag/Option Set
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# If you wish to simply alter a flag/option set, for instance, by renaming
# things, simply use a combination of the instructions above.  Ensure that the
# flag-option combinations in this file map to sections in `config-specs.ini`.
#
#------------------------------------------------------------------------------

[DEFAULT]
use-mpi:
    mpi # the first option is the default if neither is specified in the build name
    no-mpi
node-type:
    serial
    openmp
package-enables:
    none   # by default, don't turn anything on
    empire
    sparc  # flags can support more than just two options
    muelu  # e.g., a common configuration used by the MueLu team
    jmgate # e.g., just my personal configuration, not intended to be used by others
