# environment-specs.ini
#
#------------------------------------------------------------------------------
#
# This is a configuration file for the `LoadEnv` tool, allowing you to specify
# what is necessary to create each of your environments.  Environments are
# grouped by system (see `supported-systems.ini`).  The syntax for a section
# specifying an environment is as follows:
#
#   [environment-name]
#   # list
#   # of
#   # commands
#
# The `environment-name` can be any string.  The recommended convention is to
# use `<system-name>-<compiler>-<compiler-version>-<mpi>-<mpi-version>`.  These
# names (excepting the `<system-name>-` prefix) must match what appears in
# `supported-envs.ini` for the given system.
#
# The commands that can be used within a section to establish an environment
# are the following:
#
#   * `use section_name`:  Inserts the contents of the section_name section in
#     place of this statement.
#   * `envvar-set envvar : value`:  Sets (or overwrites) an environment
#     variable.
#   * `envvar-append envvar : value`:  Append a value to an existing
#     environment variable.
#   * `envvar-prepend envvar : value`:  Prepend a value to an existing
#     environment variable.
#   * `envvar-remove envvar`:  Removes all occurrences of `envvar` from the
#     list of actions to be applied.
#   * `envvar-unset envvar`:  Unsets (removes) an environment variable, if it
#     exists.
#   * `module-load module_name : version`:  Load a module.
#   * `module-purge`:  Purge all loaded modules.
#   * `module-remove module_name`:  Removes all uses of `module_name` from the
#     list of actions to be applied.
#   * `module-swap module_old : module_new/nersion`:  Swaps two modules.
#   * `module-unload module_name`:  Unloads a module.
#   * `module-use path`:  Adds a path to modulefiles.
#
# It is possible to create sections within the file that do not correspond to a
# complete environment, but rather are intended to be `use`d within other
# environments.  In such cases, the recommended convention for the section name
# is to use ALL-CAPS, and pick something representative of where it will be
# used, e.g., use `[ATS2]` to collect operations that are common to all
# `[machine-type-2-*]` environments.
#
# Note:
#   The operations in a section will be executed in the order in which they
#   appear, so you need to be careful with the ordering of `use` statements and
#   loading metamodules.
#
#------------------------------------------------------------------------------
#
# Modifying an Existing Environment
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# To make modifications to an existing environment, the process is:
#
#   1. Find the environment you need to modify within the file.
#   2. Modify the list of commands under that `[environment-name]` section
#      heading (see the command list above) to modify the environment
#      appropriately:
#      * Change environment variables.
#      * Change modules loaded.
#
# Note:
#   It is not recommended that you change the versions of the compiler or MPI
#   implementation for an existing environment.  Instead see below to add a new
#   environment.
#
# Note:
#   If you need to modify multiple environments on a system in the exact same
#   way, there should be a `[SYSTEM-NAME]` section that gets `use`d in the
#   individual environments themselves.  Modify that section instead.  If that
#   section does not yet exist, see the note below under adding a new
#   environment.
#
#------------------------------------------------------------------------------
#
# Adding a New Environment to an Existing System
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# To stand up a new environment on a currently supported system, the process
# is:
#
#   1. Find the system to which you would like to add the new environment.
#   2. Determine a new environment name (see above for the naming convention).
#   3. Add a new `[environment-name]` section heading under the given system.
#      Environment names are organized alphabetically for any given system.
#   4. Create a list of commands under that `[environment-name]` section
#      heading (see the command list above) to establish the environment
#      appropriately:
#      * Set/alter environment variables.
#      * Load modules.
#
# Note:
#   If there are any commonalities shared by multiple environments on a certain
#   system:
#   1. Create a `[SYSTEM-NAME]` section to collect the common operations.
#   2. Remove the common operations from the environments from which they were
#      taken.
#   3. Insert a `use SYSTEM-NAME` statement in each of the environments from
#      which commonalities were removed.
#
#------------------------------------------------------------------------------
#
# Removing an Environment
# ~~~~~~~~~~~~~~~~~~~~~~~
#
# When a particular environment is no longer needed---for instance, if a new
# environment was stood up to replace it and it's been sufficiently
# vetted---the process to remove an environment is:
#
#   1. Find the environment you wish to remove in the file.
#   2. Remove the `[environment-name]` section heading and any commands listed
#      underneath it.
#
#------------------------------------------------------------------------------
#
# Adding a New Environment for a New System
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# When standing up a completely new system, the procedure is:
#
#   1. Add the new system to `supported-systems.ini`.
#   2. Add the environment to be supported on that system to
#      `supported-envs.ini`.
#   3. Create a new system comment block in the file by copying and pasting an
#      existing one and modifying the system name.  The systems are organized
#      alphabetically within the file.
#   4. Create one or more new environments for the new system.  See above for
#      how to add a new environment.
#
#------------------------------------------------------------------------------



#------------------------------------------------------------------------------
# machine-type-1
#------------------------------------------------------------------------------

[ATS1]
envvar-prepend PATH : /projects/netpub/atdm/ninja-1.8.2/bin

[machine-type-1-intel-19.0.4-mpich-7.7.15-hsw]
module-load sparc-dev : intel-19.0.4_mpich-7.7.15_hsw
use ATS1

[machine-type-1-intel-19.0.4-mpich-7.7.15-knl]
module-load sparc-dev : intel-19.0.4_mpich-7.7.15_knl
use ATS1



#------------------------------------------------------------------------------
# machine-type-2
#------------------------------------------------------------------------------

[ATS2]
module-load    cmake : 3.18.0
module-load    git   : 2.20.0
envvar-prepend PATH  : /projects/atdm_devops/vortex/ninja-fortran-1.8.2

[machine-type-2-cuda-10.1.243-gnu-7.3.1-spmpi-rolling]
module-load sparc-dev : cuda-10.1.243_gcc-7.3.1_spmpi-rolling
use ATS2

[machine-type-2-cuda-10.1.243-xl-2020.03.18-spmpi-rolling]
module-load sparc-dev : cuda-10.1.243_xl-2020.03.18_spmpi-rolling
use ATS2

[machine-type-2-gnu-7.3.1-spmpi-rolling]
module-load sparc-dev : gcc-7.3.1_spmpi-rolling # Note: This updates CMake to 3.19.4.
use ATS2

[machine-type-2-xl-2020.03.18-spmpi-rolling]
module-load sparc-dev : xl-2020.03.18_spmpi-rolling
use ATS2



#------------------------------------------------------------------------------
# machine-type-3
#------------------------------------------------------------------------------

[CTS1]
module-load sems-env
module-load sems-ninja_fortran : 1.8.2

[machine-type-3-intel-18.0.2-openmpi-4.0.1]
use CTS1
module-load    sems-cmake    : 3.19.1
module-load    sems-git      : 2.10.1
module-load    intel         : 18.0.2.199
module-load    mkl           : 18.0.5.274
module-load    openmpi-intel : 4.0
envvar-prepend PATH          : /usr/tce/packages/gcc/gcc-6.1.0/bin

[machine-type-3-intel-18.0.2-openmpi-4.0.3]
use CTS1
module-load          sparc-dev : intel-19.0.4_openmpi-4.0.3
module-load          intel     : 18.0.2.199
envvar-remove-string PATH      : /projects/sparc/tools/vvt

[machine-type-3-intel-19.0.4-openmpi-4.0.3]
use CTS1
module-load sparc-dev : intel-19.0.4_openmpi-4.0.3



#------------------------------------------------------------------------------
# rhel7
#------------------------------------------------------------------------------

[RHEL7]
module-load sems-env
module-load sems-cmake         : 3.19.1
module-load sems-ninja_fortran : 1.8.2

[rhel7-cee-clang-9.0.1-openmpi-4.0.3]
module-load sparc-dev : clang-9.0.1_openmpi-4.0.3
use RHEL7

[rhel7-cee-cuda-10.1.243-gnu-7.2.0-openmpi-4.0.3]
module-load sparc-dev : cuda-10.1.243_gcc-7.2.0_openmpi-4.0.3
use RHEL7

[rhel7-cee-gnu-7.2.0-openmpi-4.0.3]
module-load sparc-dev : gcc-7.2.0_openmpi-4.0.3
use RHEL7

[rhel7-cee-intel-19.0.3-intelmpi-2018.4]
module-load sparc-dev : intel-19.0.3_intelmpi-2018.4
use RHEL7

[rhel7-cee-intel-19.0.3-mpich-2-3.2]
module-load sparc-dev : intel-19.0.3_mpich2-3.2
use RHEL7

[RHEL7-SEMS]
use RHEL7
module-load sems-boost   : 1.59.0/base
module-load sems-git     : 2.10.1
module-load sems-hdf5    : 1.10.6/parallel
module-load sems-netcdf  : 4.7.3/parallel
module-load sems-openmpi : 1.10.1
module-load sems-superlu : 4.3/base
module-load sems-zlib    : 1.2.8/base

[rhel7-sems-clang-7.0.1-openmpi-1.10.1]
use RHEL7-SEMS
module-load sems-clang : 7.0.1
module-load sems-gcc   : 5.3.0

[rhel7-sems-cuda-9.2-gnu-7.2.0-openmpi-1.10.1]
use RHEL7-SEMS
module-load sems-cuda : 9.2
module-load sems-gcc  : 7.2.0

[rhel7-sems-gnu-7.2.0-openmpi-1.10.1]
use RHEL7-SEMS
module-load sems-gcc : 7.2.0

[rhel7-sems-intel-18.0.5-openmpi-1.10.1]
use RHEL7-SEMS
module-load sems-gcc   : 7.2.0
module-load sems-intel : 18.0.5



#------------------------------------------------------------------------------
# ride
#------------------------------------------------------------------------------
[ride-cuda-9.2-gnu-7.2.0-openmpi-2.1.2]
module-load   devpack  : 20180521/openmpi/2.1.2/gcc/7.2.0/cuda/9.2.88
module-unload openblas : 0.2.20/gcc/7.2.0
module-load   netlib   : 3.8.0/gcc/7.2.0

[ride-cuda-10.1-gnu-7.2.0-openmpi-4.0.1]
module-load devpack : 20190404/openmpi/4.0.1/gcc/7.2.0/cuda/10.1.105

[ride-gnu-7.2.0-openmpi-2.1.2]
use ride-cuda-9.2-gnu-7.2.0



#------------------------------------------------------------------------------
# machine-type-5
#------------------------------------------------------------------------------

[machine-type-5-intel-18.0.0-openmpi-1.10.5]
module-load   sems-env
module-load   sems-cmake         : 3.19.1
module-load   sems-ninja_fortran : 1.8.2
module-load   sems-intel         : 18.0.0
module-load   sems-openmpi       : 1.10.5
module-load   sems-netcdf        : 4.7.3/parallel
module-load   sems-parmetis      : 4.0.3/64bit_parallel
module-load   sems-scotch        : 6.0.3/nopthread_64bit_parallel
module-load   sems-superlu       : 5.2.1/base
module-load   sems-yaml_cpp      : 0.5.3/base
module-load   sems-zlib          : 1.2.8/base
module-unload sems-boost         : 1.63.0/base
module-load   sems-boost         : 1.66.0/base
module-swap   mkl/18.0.0.128     : mkl/18.0.5.274
module-load   cde/compiler       : gcc/7.2.0
module-unload sems-python        : 2.7.9



#------------------------------------------------------------------------------
# machine-type-4
#------------------------------------------------------------------------------

[VAN1-TX2]
module-load ninja
module-load cmake : 3.17.1

[machine-type-4-arm-20.0-openmpi-4.0.2]
use VAN1-TX2
module-load   devpack-arm
module-unload yaml-cpp
module-load   python   : 3.6.8-arm
module-load   arm      : 20.0
module-load   openmpi4 : 4.0.2
module-load   armpl    : 20.0.0
module-load   git      : 2.19.2

[machine-type-4-arm-20.1-openmpi-4.0.3]
use VAN1-TX2
module-load   sparc-dev : arm-20.1_openmpi-4.0.3
module-unload yaml-cpp
