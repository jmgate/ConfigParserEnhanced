# config-specs.ini
#
#------------------------------------------------------------------------------
#
# This is a configuration file for the `GenConfig` tool, used to specify what
# CMake configuration settings correspond to the various machines listed in
# `supported-systems.ini` and the flags/options in
# `supported-config-flags.ini`.
#
# INSERT SYNTAX EXAMPLE
#
# INSERT ORGANIZATION EXAMPLE
#
#------------------------------------------------------------------------------
#
# Adding a New Flag/Option Set
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#------------------------------------------------------------------------------
#
#
#
#------------------------------------------------------------------------------
#
#
#
#------------------------------------------------------------------------------
#
#
#
#------------------------------------------------------------------------------



#------------------------------------------------------------------------------
# Configuration settings common to all supported configurations.
#------------------------------------------------------------------------------

[COMMON]
# settings common to all configurations go here



#------------------------------------------------------------------------------
# System-specific tweaks to the common configuration.
#------------------------------------------------------------------------------

[machine-type-5]
use COMMON
# Note:  You may want to rip out all the following test disables.  My
#        preference would be to leave everything enabled and force people to
#        fix the tests.
opt-set-cmake-var SEACASAprepro_aprepro_array_test_DISABLE                BOOL : ON
opt-set-cmake-var SEACASAprepro_aprepro_command_line_include_test_DISABLE BOOL : ON
opt-set-cmake-var SEACASAprepro_aprepro_command_line_vars_test_DISABLE    BOOL : ON
opt-set-cmake-var SEACASAprepro_aprepro_test_dump_reread_DISABLE          BOOL : ON
opt-set-cmake-var SEACASAprepro_aprepro_unit_test_DISABLE                 BOOL : ON
opt-set-cmake-var SEACASAprepro_lib_aprepro_lib_array_test_DISABLE        BOOL : ON
opt-set-cmake-var SEACASAprepro_lib_aprepro_lib_unit_test_DISABLE         BOOL : ON
opt-set-cmake-var SEACASExodus_exodus_unit_tests_nc5_env_DISABLE          BOOL : ON
opt-set-cmake-var SEACASAprepro_aprepro_test_exodus_DISABLE               BOOL : ON
opt-set-cmake-var SEACASIoss_exodus32_to_exodus32_DISABLE                 BOOL : ON
opt-set-cmake-var SEACASIoss_exodus32_to_exodus32_pnetcdf_DISABLE         BOOL : ON
opt-set-cmake-var SEACASIoss_exodus32_to_exodus64_DISABLE                 BOOL : ON
# Note:  Only do the following line if `node-type` is `openmp` and
#        `kokkos-arch` is `hsw`.
opt-set-cmake-var SEACASExodus_exodus_unit_tests_DISABLE                  BOOL : ON
# Note:  Only do the following line if `compiler` is `intel-19`, `kokkos-arch`
#        is `hsw`, and `node-type` is `openmp`.
opt-set-cmake-var ROL_SKIP_CTEST_ADD_TEST                                 BOOL : ON

[machine-type-4]
use COMMON
# other system-specific settings here

[machine-type-2]
use COMMON
# other system-specific settings here

[rhel7]
use COMMON
# other system-specific settings here

[machine-name-1]
use COMMON
# other system-specific settings here

[machine-type-1]
use COMMON
# other system-specific settings here

[machine-type-3]
use COMMON
# other system-specific settings here



#------------------------------------------------------------------------------
# Tweaks corresponding to flag-option pairs from `supported-config-flags.ini`.
#------------------------------------------------------------------------------



#
# build-type
#

[build-type-debug]
opt-set-cmake-var CMAKE_BUILD_TYPE STRING    : DEBUG
opt-set-cmake-var Trilinos_ENABLE_DEBUG BOOL : ON

[build-type-dbg]
use build-type-debug

[build-type-release]
opt-set-cmake-var CMAKE_BUILD_TYPE STRING    : RELEASE
opt-set-cmake-var Trilinos_ENABLE_DEBUG BOOL : OFF

[build-type-opt]
use build-type-release

[build-type-release-debug]
opt-set-cmake-var CMAKE_BUILD_TYPE STRING    : RELEASE
opt-set-cmake-var Trilinos_ENABLE_DEBUG BOOL : ON



#
# kokkos-arch
#
# Note:  Need to figure out a way to consolidate all these [kokkos-arch|*]
#        sections below.  As it is, this is gross.

[kokkos-arch|none]
# Nothing to do here.

[kokkos-arch|knc]
opt-set-cmake-var Kokkos_ARCH_KNC BOOL : ON

[kokkos-arch|knl]
opt-set-cmake-var Kokkos_ARCH_KNL BOOL : ON

[kokkos-arch|snb]
opt-set-cmake-var Kokkos_ARCH_SNB BOOL : ON

[kokkos-arch|hsw]
opt-set-cmake-var Kokkos_ARCH_HSW BOOL : ON

[kokkos-arch|bdw]
opt-set-cmake-var Kokkos_ARCH_BDW BOOL : ON

[kokkos-arch|skx]
opt-set-cmake-var Kokkos_ARCH_SKX BOOL : ON

[kokkos-arch|kepler]
opt-set-cmake-var Kokkos_ARCH_KEPLER BOOL : ON

[kokkos-arch|kepler30]
opt-set-cmake-var Kokkos_ARCH_KEPLER30 BOOL : ON

[kokkos-arch|kepler32]
opt-set-cmake-var Kokkos_ARCH_KEPLER32 BOOL : ON

[kokkos-arch|kepler35]
opt-set-cmake-var Kokkos_ARCH_KEPLER35 BOOL : ON

[kokkos-arch|kepler37]
opt-set-cmake-var Kokkos_ARCH_KEPLER37 BOOL : ON

[kokkos-arch|maxwell]
opt-set-cmake-var Kokkos_ARCH_MAXWELL BOOL : ON

[kokkos-arch|maxwell50]
opt-set-cmake-var Kokkos_ARCH_MAXWELL50 BOOL : ON

[kokkos-arch|maxwell52]
opt-set-cmake-var Kokkos_ARCH_MAXWELL52 BOOL : ON

[kokkos-arch|maxwell53]
opt-set-cmake-var Kokkos_ARCH_MAXWELL53 BOOL : ON

[kokkos-arch|pascal60]
opt-set-cmake-var Kokkos_ARCH_PASCAL60 BOOL : ON

[kokkos-arch|pascal61]
opt-set-cmake-var Kokkos_ARCH_PASCAL61 BOOL : ON

[kokkos-arch|volta70]
opt-set-cmake-var Kokkos_ARCH_VOLTA70 BOOL : ON

[kokkos-arch|volta72]
opt-set-cmake-var Kokkos_ARCH_VOLTA72 BOOL : ON

[kokkos-arch|turing75]
opt-set-cmake-var Kokkos_ARCH_TURING75 BOOL : ON

[kokkos-arch|ampere80]
opt-set-cmake-var Kokkos_ARCH_AMPERE80 BOOL : ON

[kokkos-arch|ampere86]
opt-set-cmake-var Kokkos_ARCH_AMPERE86 BOOL : ON

[kokkos-arch|armv80]
opt-set-cmake-var Kokkos_ARCH_ARMV80 BOOL : ON

[kokkos-arch|armv81]
opt-set-cmake-var Kokkos_ARCH_ARMV81 BOOL : ON

[kokkos-arch|armv8-thunderx]
opt-set-cmake-var Kokkos_ARCH_ARMV8-THUNDERX BOOL : ON

[kokkos-arch|armv8-tx2]
opt-set-cmake-var Kokkos_ARCH_ARMV8-TX2 BOOL : ON

[kokkos-arch|a64fx]
opt-set-cmake-var Kokkos_ARCH_A64FX BOOL : ON

[kokkos-arch|bgq]
opt-set-cmake-var Kokkos_ARCH_BGQ BOOL : ON

[kokkos-arch|power7]
opt-set-cmake-var Kokkos_ARCH_POWER7 BOOL : ON

[kokkos-arch|power8]
opt-set-cmake-var Kokkos_ARCH_POWER8 BOOL : ON

[kokkos-arch|power9]
opt-set-cmake-var Kokkos_ARCH_POWER9 BOOL : ON

[kokkos-arch|vega900]
opt-set-cmake-var Kokkos_ARCH_VEGA900 BOOL : ON

[kokkos-arch|vega906]
opt-set-cmake-var Kokkos_ARCH_VEGA906 BOOL : ON

[kokkos-arch|vega908]
opt-set-cmake-var Kokkos_ARCH_VEGA908 BOOL : ON

[kokkos-arch|amdavx]
opt-set-cmake-var Kokkos_ARCH_AMDAVX BOOL : ON

[kokkos-arch|zen]
opt-set-cmake-var Kokkos_ARCH_ZEN BOOL : ON

[kokkos-arch|zen2]
opt-set-cmake-var Kokkos_ARCH_ZEN2 BOOL : ON



#
# lib-type
#

[lib-type|static]
opt-set-cmake-var BUILD_SHARED_LIBS    BOOL : OFF
opt-set-cmake-var TPL_FIND_SHARED_LIBS BOOL : OFF
#SET(ATDM_TPL_LIB_EXT "a") # See ATDMDevEnvSettings.cmake for usage.  We may need to add logic functionality to SetProgramOptions.

[lib-type|shared]
opt-set-cmake-var BUILD_SHARED_LIBS    BOOL : ON
opt-set-cmake-var TPL_FIND_SHARED_LIBS BOOL : ON
#SET(ATDM_TPL_LIB_EXT "so") # See ATDMDevEnvSettings.cmake for usage.  We may need to add logic functionality to SetProgramOptions.



#
# node-type
#

[node-type|serial]
opt-set-cmake-var Trilinos_ENABLE_OpenMP          BOOL   : OFF
opt-set-cmake-var Kokkos_ENABLE_OPENMP            BOOL   : OFF
opt-set-cmake-var Phalanx_KOKKOS_DEVICE_TYPE      STRING : SERIAL
opt-set-cmake-var Tpetra_INST_SERIAL              BOOL   : ON
opt-set-cmake-var Kokkos_ENABLE_SERIAL            BOOL   : ON     # UNCLEAR IF THIS SHOULD BE HERE
opt-set-cmake-var Kokkos_ENABLE_CUDA_UVM          BOOL   : OFF
opt-set-cmake-var Kokkos_ENABLE_CUDA              BOOL   : OFF
opt-set-cmake-var Kokkos_ENABLE_CUDA_LAMBDA       BOOL   : OFF
opt-set-cmake-var Tpetra_INST_CUDA                BOOL   : OFF
opt-set-cmake-var Sacado_ENABLE_HIERARCHICAL_DFAD BOOL   : OFF
opt-set-cmake-var TPL_ENABLE_CUDA                 BOOL   : OFF
opt-set-cmake-var TPL_ENABLE_CUSPARSE             BOOL   : OFF

[node-type|cuda]
opt-set-cmake-var Trilinos_ENABLE_OpenMP          BOOL   : OFF
opt-set-cmake-var Kokkos_ENABLE_OPENMP            BOOL   : OFF
opt-set-cmake-var Phalanx_KOKKOS_DEVICE_TYPE      STRING : CUDA
opt-set-cmake-var Tpetra_INST_SERIAL              BOOL   : ON
opt-set-cmake-var Kokkos_ENABLE_SERIAL            BOOL   : OFF    # UNCLEAR IF THIS SHOULD BE HERE
opt-set-cmake-var Kokkos_ENABLE_CUDA_UVM          BOOL   : ON
opt-set-cmake-var Kokkos_ENABLE_CUDA              BOOL   : ON
opt-set-cmake-var Kokkos_ENABLE_CUDA_LAMBDA       BOOL   : ON
opt-set-cmake-var Tpetra_INST_CUDA                BOOL   : ON
opt-set-cmake-var Sacado_ENABLE_HIERARCHICAL_DFAD BOOL   : ON
opt-set-cmake-var TPL_ENABLE_CUDA                 BOOL   : ON
opt-set-cmake-var TPL_ENABLE_CUSPARSE             BOOL   : ON

[node-type|openmp]
opt-set-cmake-var Trilinos_ENABLE_OpenMP          BOOL   : ON
opt-set-cmake-var Kokkos_ENABLE_OPENMP            BOOL   : ON
opt-set-cmake-var Phalanx_KOKKOS_DEVICE_TYPE      STRING : OPENMP
opt-set-cmake-var Tpetra_INST_SERIAL              BOOL   : OFF
opt-set-cmake-var Kokkos_ENABLE_SERIAL            BOOL   : OFF    # UNCLEAR IF THIS SHOULD BE HERE
opt-set-cmake-var Kokkos_ENABLE_CUDA_UVM          BOOL   : OFF
opt-set-cmake-var Kokkos_ENABLE_CUDA              BOOL   : OFF
opt-set-cmake-var Kokkos_ENABLE_CUDA_LAMBDA       BOOL   : OFF
opt-set-cmake-var Tpetra_INST_CUDA                BOOL   : OFF
opt-set-cmake-var Sacado_ENABLE_HIERARCHICAL_DFAD BOOL   : OFF
opt-set-cmake-var TPL_ENABLE_CUDA                 BOOL   : OFF
opt-set-cmake-var TPL_ENABLE_CUSPARSE             BOOL   : OFF



#
# use-asan
#

[use-asan-asan]
opt-set-cmake-var CMAKE_CXX_FLAGS        STRING : ${CMAKE_CXX_FLAGS} -g -O1 -fsanitize=address -fno-omit-frame-pointer
opt-set-cmake-var CMAKE_EXE_LINKER_FLAGS STRING : ${CMAKE_EXE_LINKER_FLAGS} -ldl -fsanitize=address
# Note:  The section above somehow needs to be done only when `compiler` is `clang`.

[use-asan-no-asan]
# Nothing to do here.



#
# use-complex
#

[use-complex|no-complex]
opt-set-cmake-var Trilinos_ENABLE_COMPLEX BOOL : OFF

[use-complex|complex]
opt-set-cmake-var Trilinos_ENABLE_COMPLEX BOOL : ON



#
# use-fpic
#

[use-fpic|fpic]
opt-set-cmake-var CMAKE_POSITION_INDEPENDENT_CODE BOOL : ON

[use-fpic|no-fpic]
# Nothing to do here.



#
# use-mpi
#

[use-mpi|mpi]
opt-set-cmake-var CMAKE_C_COMPILER       FILEPATH : ${MPICC}
opt-set-cmake-var CMAKE_CXX_COMPILER     FILEPATH : ${MPICXX}
opt-set-cmake-var CMAKE_Fortran_COMPILER FILEPATH : ${MPIF90}
opt-set-cmake-var TPL_ENABLE_MPI         BOOL     : ON
# Note:  enable (par)metis/superludist if using SPARC settings + MPI
#        also look into other <tpl>_ROOT variables (CGNS, HDF5, NETCDF, etc.)

[use-mpi|no-mpi]
opt-set-cmake-var CMAKE_C_COMPILER       FILEPATH : ${SERIAL_CC}
opt-set-cmake-var CMAKE_CXX_COMPILER     FILEPATH : ${SERIAL_CXX}
opt-set-cmake-var CMAKE_Fortran_COMPILER FILEPATH : ${SERIAL_FC}
opt-set-cmake-var TPL_ENABLE_MPI         BOOL     : OFF
# Note:  disable (par)metis/superludist if not using SPARC settings + MPI
#        also look into other <tpl>_ROOT variables (CGNS, HDF5, NETCDF, etc.)



#
# use-pt
#

[use-pt|no-pt]
opt-set-cmake-var Trilinos_ENABLE_Fortran               BOOL : OFF
# Note:  The setting above would be flipped if ATDM_ENABLE_SPARC_SETTINGS is true, but I don't know how that variable plays into things yet.
opt-set-cmake-var Trilinos_ENABLE_SECONDARY_TESTED_CODE BOOL : ON

[use-pt|pt]
opt-set-cmake-var Trilinos_ENABLE_Fortran               BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_SECONDARY_TESTED_CODE BOOL : OFF



#
# use-rdc
#

[use-rdc|no-rdc]
opt-set-cmake-var Kokkos_ENABLE_CUDA_RELOCATABLE_DEVICE_CODE BOOL : OFF

[use-rdc|rdc]
opt-set-cmake-var CMAKE_CXX_FLAGS                            STRING : ${CMAKE_CXX_FLAGS} --remove-duplicate-link-files
# Note:  The setting above needs to somehow be done only when `compiler` is `cuda`.
opt-set-cmake-var Kokkos_ENABLE_CUDA_RELOCATABLE_DEVICE_CODE BOOL   : ON



#
# package-enables
#

[package-enables|none]
# Nothing to do here.

[package-enables|empire]
opt-set-cmake-var Gtest_SKIP_INSTALL              BOOL : TRUE
opt-set-cmake-var Trilinos_ENABLE_Anasazi         BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_Gtest           BOOL : FALSE
opt-set-cmake-var Trilinos_ENABLE_Panzer          BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_SEACASAprepro   BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_SEACASEpu       BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_SEACASExodiff   BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_SEACASNemslice  BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_SEACASNemspread BOOL : ON

[package-enables|sparc]
opt-set-cmake-var Trilinos_ENABLE_Amesos      BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_Amesos2     BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_Anasazi     BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_AztecOO     BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_Belos       BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_Epetra      BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_EpetraExt   BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_Gtest       BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_Ifpack      BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_Ifpack2     BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_Kokkos      BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_KokkosCore  BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_ML          BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_MueLu       BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_NOX         BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_ROL         BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_Sacado      BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_SEACAS      BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_STKSearch   BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_STKTransfer BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_STKUtil     BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_Stratimikos BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_Teko        BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_Teuchos     BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_Thyra       BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_Tpetra      BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_TriKota     BOOL : ON

[package-enables|sparc-mini-trilinos]
opt-set-cmake-var TPL_ENABLE_Boost       BOOL : OFF
opt-set-cmake-var TPL_ENABLE_BoostLib    BOOL : OFF
opt-set-cmake-var TPL_ENABLE_METIS       BOOL : OFF
opt-set-cmake-var TPL_ENABLE_ParMETIS    BOOL : OFF
opt-set-cmake-var TPL_ENABLE_SuperLUDist BOOL : OFF
opt-set-cmake-var Trilinos_ENABLE_Kokkos BOOL : ON
opt-set-cmake-var Trilinos_ENABLE_Pamgen BOOL : OFF
opt-set-cmake-var Trilinos_ENABLE_SEACAS BOOL : ON

[package-enables|muelu]
# Turn on some MueLu-specific stuff.

[package-enables|jmgate]
# Turn on whatever stuff I care about.



# NOTES

[flag1|option1] # e.g., use-mpi|mpi; sections exist corresponding to each supported flag option
# settings for only this particular flag selection here
# should not `use` the COMMON or system-specific sections

[flag1|option2] # e.g., use-mpi|no-mpi
# settings for only this particular flag selection here

[package-enables|empire]
# turn on the packages used by the EMPIRE team

[package-enables|sparc]
# turn on the packages used by the SPARC team

# etc.
